Warning: Log dir E:\Analogous-Disentangled-Actor-Critic\agents\data\InvertedPendulum-v4\InvertedPendulum-v4_s0 already exists! Storing info there anyway.
[32mLogging data to E:\Analogous-Disentangled-Actor-Critic\agents\data\InvertedPendulum-v4\InvertedPendulum-v4_s0\progress.txt
[36mSaving config:
{
    "exp_name":	"InvertedPendulum-v4",
    "logger":	{
        "<spinup.utils.logx.EpochLogger object at 0x00000263EA6522F0>":	{
            "epoch_dict":	{},
            "exp_name":	"InvertedPendulum-v4",
            "first_row":	true,
            "log_current_row":	{},
            "log_headers":	[],
            "output_dir":	"E:\\Analogous-Disentangled-Actor-Critic\\agents\\data\\InvertedPendulum-v4\\InvertedPendulum-v4_s0",
            "output_file":	{
                "<_io.TextIOWrapper name='E:\\\\Analogous-Disentangled-Actor-Critic\\\\agents\\\\data\\\\InvertedPendulum-v4\\\\InvertedPendulum-v4_s0\\\\progress.txt' mode='w' encoding='cp1252'>":	{
                    "mode":	"w"
                }
            }
        }
    },
    "self":	{
        "<agents.sac.SAC object at 0x00000263E2A43B50>":	{
            "ac_kwargs":	{},
            "actor_critic":	"MLPActorCritic",
            "alpha":	0.2,
            "batch_size":	100,
            "device":	"cuda",
            "env_fn":	"<function SAC.__init__.<locals>.<lambda> at 0x00000263E3CDCCA0>",
            "epochs":	100,
            "gamma":	0.99,
            "logger_kwargs":	{
                "exp_name":	"InvertedPendulum-v4",
                "output_dir":	"E:\\Analogous-Disentangled-Actor-Critic\\agents\\data\\InvertedPendulum-v4\\InvertedPendulum-v4_s0"
            },
            "lr":	0.001,
            "max_ep_len":	1000,
            "num_test_episodes":	10,
            "polyak":	0.995,
            "replay_size":	1000000,
            "save_freq":	1,
            "seed":	0,
            "start_steps":	10000,
            "steps_per_epoch":	4000,
            "update_after":	1000,
            "update_every":	50
        }
    }
}
[32mNumber of parameters: 	 pi: 67586, 	 q1: 67585, 	 q2: 67585
D:\nlp\torchenv\lib\site-packages\gymnasium\envs\registration.py:517: DeprecationWarning: [33mWARN: The environment InvertedPendulum-v4 is out of date. You should consider upgrading to version `v5`.
  logger.deprecation(
Traceback (most recent call last):
  File "E:\Analogous-Disentangled-Actor-Critic\main.py", line 141, in <module>
    main()
  File "E:\Analogous-Disentangled-Actor-Critic\main.py", line 129, in main
    trainer = Trainer(args)
  File "E:\Analogous-Disentangled-Actor-Critic\trainers\Trainer.py", line 117, in __init__
    sac.sac()
  File "E:\Analogous-Disentangled-Actor-Critic\agents\sac.py", line 361, in sac
    if (epoch % self.save_freq == 0) or (epoch == self.epochs):
  File "E:\Analogous-Disentangled-Actor-Critic\agents\sac.py", line 303, in test_agent
    for j in range(self.num_test_episodes):
  File "E:\Analogous-Disentangled-Actor-Critic\agents\sac.py", line 295, in get_action
    p_targ.data.mul_(self.polyak)
  File "E:\Analogous-Disentangled-Actor-Critic\./agents\spinup\sac\core.py", line 97, in act
    a, _ = self.pi(obs, deterministic, False)
  File "D:\nlp\torchenv\lib\site-packages\torch\nn\modules\module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "E:\Analogous-Disentangled-Actor-Critic\./agents\spinup\sac\core.py", line 39, in forward
    net_out = self.net(obs)
  File "D:\nlp\torchenv\lib\site-packages\torch\nn\modules\module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "D:\nlp\torchenv\lib\site-packages\torch\nn\modules\container.py", line 139, in forward
    input = module(input)
  File "D:\nlp\torchenv\lib\site-packages\torch\nn\modules\module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "D:\nlp\torchenv\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cpu and cuda:0! (when checking argument for argument mat2 in method wrapper_mm)