
ER: 1.0000| CR: 0.0000 SR: 0.0000:   0%|                                                                      | 1/70000 [00:03<65:46:00,  3.38s/it]E:\Analogous-Disentangled-Actor-Critic\mems\Memory.py:117: UserWarning: Batch size is bigger than buffer size, be careful of over-sampling.
  warnings.warn("Batch size is bigger than buffer size, be careful of over-sampling.")





























































ER: 2.0000| CR: 0.0000 SR: 0.0000:   3%|█▉                                                                  | 2018/70000 [02:06<1:14:53, 15.13it/s]




































ER: 1.0000| CR: 0.0000 SR: 0.0000:   4%|███                                                                   | 3114/70000 [03:19<57:58, 19.23it/s]Traceback (most recent call last):
  File "E:\Analogous-Disentangled-Actor-Critic\main.py", line 139, in <module>
    main()
  File "E:\Analogous-Disentangled-Actor-Critic\main.py", line 129, in main
    trainer.train()
  File "E:\Analogous-Disentangled-Actor-Critic\trainers\Trainer.py", line 166, in train
    self.train_offPolicy()
  File "E:\Analogous-Disentangled-Actor-Critic\trainers\Trainer.py", line 218, in train_offPolicy
    self.agent.train_step()
  File "E:\Analogous-Disentangled-Actor-Critic\agents\Agent_DDPG_TD3_AAC.py", line 209, in train_step
    next_Q_values2 = self.critic2_target(
  File "D:\nlp\torchenv\lib\site-packages\torch\nn\modules\module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "E:\Analogous-Disentangled-Actor-Critic\agents\Agent_DDPG_TD3_AAC.py", line 78, in forward
    action_feature = self.action_encoder(torch.cat((state_feature, action), dim = 1))
  File "D:\nlp\torchenv\lib\site-packages\torch\nn\modules\module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "E:\Analogous-Disentangled-Actor-Critic\networks\FCNet.py", line 83, in forward
    x = unit(x)
  File "D:\nlp\torchenv\lib\site-packages\torch\nn\modules\module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "D:\nlp\torchenv\lib\site-packages\torch\nn\modules\linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
KeyboardInterrupt